{"version":3,"sources":["catlogo.PNG","App.js","reportWebVitals.js","index.js"],"names":["App","formatter","proj","className","img","src","placeholderImage","alt","style","textAlign","title","github","href","website","lang","join","integr","descr","id","state","data","jsonData","require","this","setState","Projects","Fragment","map","eachProject","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"moEAAe,G,MAAA,IAA0B,qC,yCCgE1BA,E,kDAtDb,aAAe,IAAD,8BACZ,gBAWFC,UAAY,SAACC,GACX,OACE,sBAAKC,UAAU,eAAf,UACgB,OAAbD,EAAKE,IACF,qBAAKD,UAAU,cAAcE,IAAKC,EAAkBC,IAAI,KACxD,qBAAKJ,UAAU,cAAcE,IAAKH,EAAKE,IAAKG,IAAI,KAEpD,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,SACGP,EAAKQ,QAER,sBAAKP,UAAU,QAAQK,MAAO,CAAEC,UAAW,UAA3C,UACmB,OAAhBP,EAAKS,QAAmB,mBAAGC,KAAMV,EAAKS,OAAQR,UAAU,OAAhC,SAAuC,cAAC,IAAD,MAC9C,OAAjBD,EAAKW,SAAoB,mBAAGD,KAAMV,EAAKW,QAASV,UAAU,OAAjC,SAAwC,cAAC,IAAD,SAEpE,qBAAKK,MAAO,CAAEC,UAAW,UAAzB,SACE,8BACGP,EAAKY,KAAKC,KAAK,MAChB,uBACiB,OAAhBb,EAAKc,QAAmB,mBAAqBd,EAAKc,OAAOD,KAAK,WAGnE,uCAAUb,EAAKe,WAnBkBf,EAAKgB,KAZ1C,EAAKC,MAAQ,CACXC,KAAM,IAHI,E,qDAOd,WACE,IAAMC,EAAWC,EAAQ,IACzBC,KAAKC,SAAS,CAAEJ,KAAMC,EAASI,a,oBA8BjC,WAAU,IAAD,OACP,OACE,eAAC,IAAMC,SAAP,WACE,oBAAIlB,MAAO,CAAEC,UAAW,QAAxB,sBAEEc,KAAKJ,MAAMC,KAAKO,KAAI,SAACC,GACnB,OAAO,EAAK3B,UAAU2B,a,GA9ChBC,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,aAM1Bb,M","file":"static/js/main.62ae0ae1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/catlogo.628ff700.PNG\";","import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport placeholderImage from './catlogo.PNG'\r\n\r\n// Icons\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport WebIcon from '@mui/icons-material/Web';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super(); \r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const jsonData = require('./projects.json');\r\n    this.setState({ data: jsonData.Projects });\r\n  }\r\n\r\n  formatter = (proj) => {\r\n    return (\r\n      <div className=\"project-item\" key={proj.id}>\r\n        {proj.img === null \r\n          ? <img className=\"project-img\" src={placeholderImage} alt=\"\"/> \r\n          : <img className=\"project-img\" src={proj.img} alt=\"\"/>}\r\n        \r\n        <h4 style={{ textAlign: \"center\" }}>\r\n          {proj.title} \r\n        </h4>\r\n        <div className=\"links\" style={{ textAlign: \"center\" }}>\r\n          {proj.github !== null && <a href={proj.github} className=\"icon\"><GitHubIcon/></a>}\r\n          {proj.website !== null && <a href={proj.website} className=\"icon\"><WebIcon/></a>}\r\n        </div>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <p>\r\n            {proj.lang.join(\", \")}\r\n            <br/>\r\n            {proj.integr !== null && \"Integration(s): \" + proj.integr.join(\", \")}\r\n          </p>\r\n        </div>\r\n        <p>&emsp;{proj.descr}</p>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 style={{ textAlign: \"left\" }}>Projects</h1> \r\n        {\r\n          this.state.data.map((eachProject) => {\r\n            return this.formatter(eachProject);\r\n          })\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('projects')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}